import React from "react";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import {
  Minimize2,
  Maximize2,
  Eye,
  EyeOff,
  ChevronDown,
  ChevronRight,
} from "lucide-react";

interface FoldingCommand {
  command: string;
  description: string;
  example: string;
  category: "create" | "navigate" | "toggle" | "delete" | "options";
}

export const TextFolding: React.FC = () => {
  const foldingCommands: FoldingCommand[] = [
    // Create folds
    {
      command: "zf{motion}",
      description: "‡∏™‡∏£‡πâ‡∏≤‡∏á fold ‡∏ï‡∏≤‡∏° motion",
      example: "zf5j - fold 5 ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ñ‡∏±‡∏î‡πÑ‡∏õ",
      category: "create",
    },
    {
      command: "zF",
      description: "‡∏™‡∏£‡πâ‡∏≤‡∏á fold ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô",
      example: "5zF - fold 5 ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏à‡∏≤‡∏Å‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô",
      category: "create",
    },
    {
      command: ":{range}fold",
      description: "‡∏™‡∏£‡πâ‡∏≤‡∏á fold ‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î",
      example: ":5,10fold - fold ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î 5-10",
      category: "create",
    },
    {
      command: "zfi{",
      description: "‡∏™‡∏£‡πâ‡∏≤‡∏á fold ‡πÉ‡∏ô bracket",
      example: "zfi{ - fold ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô {}",
      category: "create",
    },
    {
      command: "zfip",
      description: "‡∏™‡∏£‡πâ‡∏≤‡∏á fold ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö paragraph",
      example: "zfip - fold ‡∏¢‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô",
      category: "create",
    },

    // Navigate folds
    {
      command: "zj",
      description: "‡πÑ‡∏õ‡∏ó‡∏µ‡πà fold ‡∏ñ‡∏±‡∏î‡πÑ‡∏õ",
      example: "zj - ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á fold ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏Ç‡πâ‡∏≤‡∏á‡∏•‡πà‡∏≤‡∏á",
      category: "navigate",
    },
    {
      command: "zk",
      description: "‡πÑ‡∏õ‡∏ó‡∏µ‡πà fold ‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤",
      example: "zk - ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á fold ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏Ç‡πâ‡∏≤‡∏á‡∏ö‡∏ô",
      category: "navigate",
    },
    {
      command: "[z",
      description: "‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏à‡∏∏‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á fold",
      example: "[z - ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á fold",
      category: "navigate",
    },
    {
      command: "]z",
      description: "‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏à‡∏∏‡∏î‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á fold",
      example: "]z - ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á fold",
      category: "navigate",
    },

    // Toggle folds
    {
      command: "za",
      description: "‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î fold ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô",
      example: "za - toggle fold ‡∏ó‡∏µ‡πà cursor ‡∏≠‡∏¢‡∏π‡πà",
      category: "toggle",
    },
    {
      command: "zA",
      description: "‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î fold ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô fold ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô",
      example: "zA - toggle ‡∏ó‡∏∏‡∏Å fold ‡πÉ‡∏ô nested fold",
      category: "toggle",
    },
    {
      command: "zo",
      description: "‡πÄ‡∏õ‡∏¥‡∏î fold ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô",
      example: "zo - ‡πÄ‡∏õ‡∏¥‡∏î fold ‡∏ó‡∏µ‡πà cursor ‡∏≠‡∏¢‡∏π‡πà",
      category: "toggle",
    },
    {
      command: "zO",
      description: "‡πÄ‡∏õ‡∏¥‡∏î fold ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô fold ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô",
      example: "zO - ‡πÄ‡∏õ‡∏¥‡∏î‡∏ó‡∏∏‡∏Å nested fold",
      category: "toggle",
    },
    {
      command: "zc",
      description: "‡∏õ‡∏¥‡∏î fold ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô",
      example: "zc - ‡∏õ‡∏¥‡∏î fold ‡∏ó‡∏µ‡πà cursor ‡∏≠‡∏¢‡∏π‡πà",
      category: "toggle",
    },
    {
      command: "zC",
      description: "‡∏õ‡∏¥‡∏î fold ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô fold ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô",
      example: "zC - ‡∏õ‡∏¥‡∏î‡∏ó‡∏∏‡∏Å nested fold",
      category: "toggle",
    },
    {
      command: "zm",
      description: "‡πÄ‡∏û‡∏¥‡πà‡∏° fold level (‡∏õ‡∏¥‡∏î fold ‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô)",
      example: "zm - ‡∏õ‡∏¥‡∏î fold ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ï‡πà‡∏≠‡πÑ‡∏õ",
      category: "toggle",
    },
    {
      command: "zM",
      description: "‡∏õ‡∏¥‡∏î fold ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î",
      example: "zM - ‡∏õ‡∏¥‡∏î‡∏ó‡∏∏‡∏Å fold ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå",
      category: "toggle",
    },
    {
      command: "zr",
      description: "‡∏•‡∏î fold level (‡πÄ‡∏õ‡∏¥‡∏î fold ‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô)",
      example: "zr - ‡πÄ‡∏õ‡∏¥‡∏î fold ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏´‡∏ô‡∏∂‡πà‡∏á",
      category: "toggle",
    },
    {
      command: "zR",
      description: "‡πÄ‡∏õ‡∏¥‡∏î fold ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î",
      example: "zR - ‡πÄ‡∏õ‡∏¥‡∏î‡∏ó‡∏∏‡∏Å fold ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå",
      category: "toggle",
    },

    // Delete folds
    {
      command: "zd",
      description: "‡∏•‡∏ö fold ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô",
      example: "zd - ‡∏•‡∏ö fold ‡∏ó‡∏µ‡πà cursor ‡∏≠‡∏¢‡∏π‡πà",
      category: "delete",
    },
    {
      command: "zD",
      description: "‡∏•‡∏ö fold ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô fold ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô",
      example: "zD - ‡∏•‡∏ö‡∏ó‡∏∏‡∏Å nested fold",
      category: "delete",
    },
    {
      command: "zE",
      description: "‡∏•‡∏ö fold ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå",
      example: "zE - ‡∏•‡∏ö‡∏ó‡∏∏‡∏Å fold ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå",
      category: "delete",
    },

    // Options and info
    {
      command: "zi",
      description: "‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô folding",
      example: "zi - toggle folding on/off",
      category: "options",
    },
    {
      command: "zn",
      description: "‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô folding",
      example: "zn - ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î",
      category: "options",
    },
    {
      command: "zN",
      description: "‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô folding",
      example: "zN - ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÉ‡∏ä‡πâ folding",
      category: "options",
    },
    {
      command: "zv",
      description: "‡πÄ‡∏õ‡∏¥‡∏î fold ‡πÄ‡∏ó‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡πÉ‡∏´‡πâ‡πÄ‡∏´‡πá‡∏ô cursor",
      example: "zv - ‡πÅ‡∏™‡∏î‡∏á‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ó‡∏µ‡πà cursor ‡∏≠‡∏¢‡∏π‡πà",
      category: "options",
    },
  ];

  const foldMethods = [
    {
      method: "manual",
      description: "‡∏™‡∏£‡πâ‡∏≤‡∏á fold ‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏ô‡πÄ‡∏≠‡∏á",
      usage: ":set foldmethod=manual",
      pros: "‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÑ‡∏î‡πâ‡πÄ‡∏ï‡πá‡∏°‡∏ó‡∏µ‡πà",
      cons: "‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏≠‡∏á",
    },
    {
      method: "indent",
      description: "‡∏™‡∏£‡πâ‡∏≤‡∏á fold ‡∏ï‡∏≤‡∏° indentation",
      usage: ":set foldmethod=indent",
      pros: "‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö Python",
      cons: "‡∏≠‡∏≤‡∏à fold ‡∏°‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ",
    },
    {
      method: "syntax",
      description: "‡∏™‡∏£‡πâ‡∏≤‡∏á fold ‡∏ï‡∏≤‡∏° syntax",
      usage: ":set foldmethod=syntax",
      pros: "‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î",
      cons: "‡∏ä‡πâ‡∏≤‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏ç‡πà",
    },
    {
      method: "marker",
      description: "‡∏™‡∏£‡πâ‡∏≤‡∏á fold ‡∏ï‡∏≤‡∏° marker ‡πÉ‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î",
      usage: ":set foldmethod=marker",
      pros: "‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥ ‡πÉ‡∏ä‡πâ {{{ ‡πÅ‡∏•‡∏∞ }}}",
      cons: "‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏° marker ‡πÉ‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î",
    },
    {
      method: "expr",
      description: "‡∏™‡∏£‡πâ‡∏≤‡∏á fold ‡∏ï‡∏≤‡∏° expression",
      usage: ":set foldmethod=expr",
      pros: "‡∏¢‡∏∑‡∏î‡∏´‡∏¢‡∏∏‡πà‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î",
      cons: "‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤",
    },
  ];

  const getCategoryIcon = (category: string) => {
    switch (category) {
      case "create":
        return <ChevronDown className="w-4 h-4 text-green-400" />;
      case "navigate":
        return <ChevronRight className="w-4 h-4 text-blue-400" />;
      case "toggle":
        return <Eye className="w-4 h-4 text-yellow-400" />;
      case "delete":
        return <EyeOff className="w-4 h-4 text-red-400" />;
      case "options":
        return <Minimize2 className="w-4 h-4 text-purple-400" />;
      default:
        return null;
    }
  };

  const getCategoryColor = (category: string) => {
    switch (category) {
      case "create":
        return "text-green-300";
      case "navigate":
        return "text-blue-300";
      case "toggle":
        return "text-yellow-300";
      case "delete":
        return "text-red-300";
      case "options":
        return "text-purple-300";
      default:
        return "text-white";
    }
  };

  const groupedCommands = {
    create: foldingCommands.filter((cmd) => cmd.category === "create"),
    navigate: foldingCommands.filter((cmd) => cmd.category === "navigate"),
    toggle: foldingCommands.filter((cmd) => cmd.category === "toggle"),
    delete: foldingCommands.filter((cmd) => cmd.category === "delete"),
    options: foldingCommands.filter((cmd) => cmd.category === "options"),
  };

  return (
    <div className="space-y-6">
      <Card className="bg-white/5 backdrop-blur-sm border-white/10">
        <CardHeader>
          <CardTitle className="text-white flex items-center gap-2">
            <Minimize2 className="w-6 h-6 text-purple-400" />
            üìÅ Text Folding - ‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
          </CardTitle>
          <CardDescription className="text-blue-200">
            ‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏ô‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏°‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏î‡πâ‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="bg-gradient-to-r from-purple-900/30 to-indigo-900/30 rounded-lg p-4 border border-purple-400/30 mb-6">
            <h3 className="text-lg font-semibold text-purple-300 mb-2">
              üí° ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡∏Ç‡∏≠‡∏á Folding
            </h3>
            <ul className="text-purple-100 text-sm space-y-1">
              <li>‚Ä¢ ‡∏°‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡πÑ‡∏î‡πâ‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô</li>
              <li>‚Ä¢ ‡∏ã‡πà‡∏≠‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß</li>
              <li>‚Ä¢ ‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏ç‡πà‡πÑ‡∏î‡πâ‡∏™‡∏∞‡∏î‡∏ß‡∏Å</li>
              <li>‚Ä¢ ‡πÇ‡∏ü‡∏Å‡∏±‡∏™‡∏Å‡∏±‡∏ö‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</li>
            </ul>
          </div>
        </CardContent>
      </Card>

      {/* Fold Methods */}
      <Card className="bg-white/5 backdrop-blur-sm border-white/10">
        <CardHeader>
          <CardTitle className="text-white flex items-center gap-2">
            <Maximize2 className="w-5 h-5 text-cyan-400" />
            ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£ Folding
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            {foldMethods.map((method, index) => (
              <div
                key={index}
                className="bg-white/5 rounded-lg p-4 border border-white/10"
              >
                <h4 className="font-semibold text-cyan-300 mb-2">
                  {method.method}
                </h4>
                <p className="text-white/80 text-sm mb-3">
                  {method.description}
                </p>
                <code className="bg-cyan-900/30 text-cyan-300 px-2 py-1 rounded text-xs block mb-2">
                  {method.usage}
                </code>
                <div className="text-xs space-y-1">
                  <div className="text-green-400">‚úì {method.pros}</div>
                  <div className="text-orange-400">! {method.cons}</div>
                </div>
              </div>
            ))}
          </div>
        </CardContent>
      </Card>

      {/* Commands by Category */}
      {Object.entries(groupedCommands).map(([category, commands]) => (
        <Card
          key={category}
          className="bg-white/5 backdrop-blur-sm border-white/10"
        >
          <CardHeader>
            <CardTitle
              className={`flex items-center gap-2 ${getCategoryColor(
                category
              )}`}
            >
              {getCategoryIcon(category)}
              {category === "create" && "‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á Fold"}
              {category === "navigate" && "‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÉ‡∏ô Fold"}
              {category === "toggle" && "‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î Fold"}
              {category === "delete" && "‡∏Å‡∏≤‡∏£‡∏•‡∏ö Fold"}
              {category === "options" && "‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"}
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="overflow-x-auto">
              <table className="w-full text-sm">
                <thead>
                  <tr className="border-b border-white/20">
                    <th className="text-left py-2 px-4 text-white/80">
                      ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
                    </th>
                    <th className="text-left py-2 px-4 text-white/80">
                      ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢
                    </th>
                    <th className="text-left py-2 px-4 text-white/80">
                      ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
                    </th>
                  </tr>
                </thead>
                <tbody>
                  {commands.map((cmd, index) => (
                    <tr
                      key={index}
                      className="border-b border-white/10 hover:bg-white/5"
                    >
                      <td className="py-2 px-4">
                        <code
                          className={`bg-${
                            getCategoryColor(category).split("-")[1]
                          }-900/30 ${getCategoryColor(
                            category
                          )} px-2 py-1 rounded font-mono`}
                        >
                          {cmd.command}
                        </code>
                      </td>
                      <td className="py-2 px-4 text-white/80">
                        {cmd.description}
                      </td>
                      <td className="py-2 px-4 text-gray-300 text-xs">
                        {cmd.example}
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </CardContent>
        </Card>
      ))}

      {/* Examples and Tips */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <Card className="bg-gradient-to-br from-green-900/30 to-emerald-900/30 border border-green-400/30">
          <CardHeader>
            <CardTitle className="text-green-300 flex items-center gap-2">
              <ChevronDown className="w-5 h-5" />
              ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              <div>
                <h5 className="font-semibold text-green-300 mb-2">
                  1. Fold Function
                </h5>
                <code className="text-green-100 text-sm block bg-green-800/20 p-2 rounded">
                  # ‡∏ß‡∏≤‡∏á‡πÄ‡∏Ñ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà function
                  <br />
                  zfi&#123; # fold ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô function
                  <br />
                  za # toggle ‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î
                </code>
              </div>
              <div>
                <h5 className="font-semibold text-green-300 mb-2">
                  2. Fold Comment Block
                </h5>
                <code className="text-green-100 text-sm block bg-green-800/20 p-2 rounded">
                  # ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å comment block
                  <br />
                  V5j # visual mode 5 ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î
                  <br />
                  zf # ‡∏™‡∏£‡πâ‡∏≤‡∏á fold
                </code>
              </div>
              <div>
                <h5 className="font-semibold text-green-300 mb-2">
                  3. Quick Navigation
                </h5>
                <code className="text-green-100 text-sm block bg-green-800/20 p-2 rounded">
                  zM # ‡∏õ‡∏¥‡∏î‡∏ó‡∏∏‡∏Å fold
                  <br />
                  zj # ‡πÑ‡∏õ‡∏¢‡∏±‡∏á fold ‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
                  <br />
                  zo # ‡πÄ‡∏õ‡∏¥‡∏î fold ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
                </code>
              </div>
            </div>
          </CardContent>
        </Card>

        <Card className="bg-gradient-to-br from-blue-900/30 to-indigo-900/30 border border-blue-400/30">
          <CardHeader>
            <CardTitle className="text-blue-300 flex items-center gap-2">
              <Eye className="w-5 h-5" />
              ‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              <div>
                <h5 className="font-semibold text-blue-300 mb-2">
                  ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô .vimrc
                </h5>
                <code className="text-blue-100 text-sm block bg-blue-800/20 p-2 rounded">
                  set foldmethod=indent
                  <br />
                  set foldlevel=2
                  <br />
                  set foldnestmax=3
                  <br />
                  nnoremap &lt;space&gt; za
                </code>
              </div>
              <div>
                <h5 className="font-semibold text-indigo-300 mb-2">
                  Fold Markers
                </h5>
                <code className="text-indigo-100 text-sm block bg-indigo-800/20 p-2 rounded">
                  {`// Section 1 {{{`}
                  <br />
                  code here...
                  <br />
                  {`// }}}`}
                  <br />
                  :set foldmethod=marker
                </code>
              </div>
              <div>
                <h5 className="font-semibold text-purple-300 mb-2">
                  Save/Load Folds
                </h5>
                <code className="text-purple-100 text-sm block bg-purple-800/20 p-2 rounded">
                  :mkview # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å fold
                  <br />
                  :loadview # ‡πÇ‡∏´‡∏•‡∏î fold
                  <br /># Auto save/load ‡πÉ‡∏ô .vimrc
                </code>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>

      <Card className="bg-gradient-to-r from-orange-900/30 to-red-900/30 border border-orange-400/30">
        <CardContent className="p-6">
          <h4 className="text-lg font-semibold text-orange-300 mb-4 flex items-center gap-2">
            üéØ ‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ Folding
          </h4>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div className="space-y-2">
              <h5 className="font-semibold text-orange-300">‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Beginner</h5>
              <ul className="text-orange-100 text-sm space-y-1">
                <li>
                  ‚Ä¢ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡πâ‡∏ß‡∏¢{" "}
                  <code className="bg-orange-800/30 px-1 rounded">zfip</code>{" "}
                  ‡πÄ‡∏û‡∏∑‡πà‡∏≠ fold paragraph
                </li>
                <li>
                  ‚Ä¢ ‡πÉ‡∏ä‡πâ{" "}
                  <code className="bg-orange-800/30 px-1 rounded">za</code>{" "}
                  ‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏•‡∏±‡∏Å‡πÉ‡∏ô‡∏Å‡∏≤‡∏£ toggle
                </li>
                <li>
                  ‚Ä¢ ‡∏ï‡∏±‡πâ‡∏á{" "}
                  <code className="bg-orange-800/30 px-1 rounded">
                    foldmethod=indent
                  </code>{" "}
                  ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
                </li>
                <li>
                  ‚Ä¢ ‡πÉ‡∏ä‡πâ{" "}
                  <code className="bg-orange-800/30 px-1 rounded">zR</code>{" "}
                  ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÄ‡∏´‡πá‡∏ô‡∏≠‡∏∞‡πÑ‡∏£
                </li>
              </ul>
            </div>
            <div className="space-y-2">
              <h5 className="font-semibold text-red-300">‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Advanced</h5>
              <ul className="text-red-100 text-sm space-y-1">
                <li>
                  ‚Ä¢ ‡πÉ‡∏ä‡πâ{" "}
                  <code className="bg-red-800/30 px-1 rounded">foldexpr</code>{" "}
                  ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö custom folding
                </li>
                <li>
                  ‚Ä¢ Map{" "}
                  <code className="bg-red-800/30 px-1 rounded">spacebar</code>{" "}
                  ‡∏Å‡∏±‡∏ö <code className="bg-red-800/30 px-1 rounded">za</code>
                </li>
                <li>
                  ‚Ä¢ ‡πÉ‡∏ä‡πâ{" "}
                  <code className="bg-red-800/30 px-1 rounded">foldtext</code>{" "}
                  ‡πÄ‡∏û‡∏∑‡πà‡∏≠ customize fold display
                </li>
                <li>
                  ‚Ä¢ Auto save folds ‡∏î‡πâ‡∏ß‡∏¢{" "}
                  <code className="bg-red-800/30 px-1 rounded">
                    viewoptions
                  </code>
                </li>
              </ul>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};
